// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLSpeakerLayout(
    public val `$mem`: MemorySegment,
) {
    public var type: IPLSpeakerLayoutType
        get() = IPLSpeakerLayoutType.fromInt(IPLSpeakerLayout.typeHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            IPLSpeakerLayout.typeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var numSpeakers: IPLint32
        get() = IPLSpeakerLayout.numSpeakersHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLSpeakerLayout.numSpeakersHandle.set(this.`$mem`, 0L, value)
        }

    public var speakers: Pointer<IPLVector3>
        get() = IPLSpeakerLayout.speakersHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            IPLSpeakerLayout.speakersHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLSpeakerLayout.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("type"),
            ValueLayout.JAVA_INT.withName("numSpeakers"),
            `$RuntimeHelper`.POINTER.withName("speakers"),
        ).withName("IPLSpeakerLayout")

        @JvmField
        public val typeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("type"))

        @JvmField
        public val numSpeakersHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("numSpeakers"))

        @JvmField
        public val speakersHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("speakers"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLSpeakerLayout =
            IPLSpeakerLayout(alloc.allocate(IPLSpeakerLayout.layout))
    }
}
