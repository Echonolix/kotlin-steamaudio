// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLSphere(
    public val `$mem`: MemorySegment,
) {
    public var center: IPLVector3
        get() = IPLVector3(IPLSphere.centerHandle.invokeExact(this.`$mem`, 0L) as MemorySegment)
        set(`value`) {
            MemorySegment.copy(value.`$mem`, 0L, this.center.`$mem`, 0L, IPLVector3.layout.byteSize())
        }

    public var radius: IPLfloat32
        get() = IPLSphere.radiusHandle.get(this.`$mem`, 0L) as Float
        set(`value`) {
            IPLSphere.radiusHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLSphere.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            IPLVector3.layout.withName("center"),
            ValueLayout.JAVA_FLOAT.withName("radius"),
        ).withName("IPLSphere")

        @JvmField
        public val centerHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("center"))

        @JvmField
        public val radiusHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("radius"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLSphere =
            IPLSphere(alloc.allocate(IPLSphere.layout))
    }
}
