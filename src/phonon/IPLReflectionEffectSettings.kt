// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLReflectionEffectSettings(
    public val `$mem`: MemorySegment,
) {
    public var type: IPLReflectionEffectType
        get() = IPLReflectionEffectType.fromInt(
            IPLReflectionEffectSettings.typeHandle.get(
                this.`$mem`,
                0L
            ) as Int
        )
        set(`value`) {
            IPLReflectionEffectSettings.typeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var irSize: IPLint32
        get() = IPLReflectionEffectSettings.irSizeHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLReflectionEffectSettings.irSizeHandle.set(this.`$mem`, 0L, value)
        }

    public var numChannels: IPLint32
        get() = IPLReflectionEffectSettings.numChannelsHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLReflectionEffectSettings.numChannelsHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLReflectionEffectSettings.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("type"),
            ValueLayout.JAVA_INT.withName("irSize"),
            ValueLayout.JAVA_INT.withName("numChannels"),
        ).withName("IPLReflectionEffectSettings")

        @JvmField
        public val typeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("type"))

        @JvmField
        public val irSizeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("irSize"))

        @JvmField
        public val numChannelsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("numChannels"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLReflectionEffectSettings =
            IPLReflectionEffectSettings(alloc.allocate(IPLReflectionEffectSettings.layout))
    }
}
