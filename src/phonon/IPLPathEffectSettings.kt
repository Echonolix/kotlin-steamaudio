// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLPathEffectSettings(
    public val `$mem`: MemorySegment,
) {
    public var maxOrder: IPLint32
        get() = IPLPathEffectSettings.maxOrderHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLPathEffectSettings.maxOrderHandle.set(this.`$mem`, 0L, value)
        }

    public var spatialize: IPLbool
        get() = IPLbool.fromInt(IPLPathEffectSettings.spatializeHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            IPLPathEffectSettings.spatializeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var speakerLayout: IPLSpeakerLayout
        get() = IPLSpeakerLayout(
            IPLPathEffectSettings.speakerLayoutHandle.invokeExact(this.`$mem`, 0L)
                    as MemorySegment
        )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.speakerLayout.`$mem`, 0L,
                IPLSpeakerLayout.layout.byteSize()
            )
        }

    public var hrtf: IPLHRTF
        get() = IPLPathEffectSettings.hrtfHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            IPLPathEffectSettings.hrtfHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLPathEffectSettings.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("maxOrder"),
            ValueLayout.JAVA_INT.withName("spatialize"),
            IPLSpeakerLayout.layout.withName("speakerLayout"),
            `$RuntimeHelper`.POINTER.withName("hrtf"),
        ).withName("IPLPathEffectSettings")

        @JvmField
        public val maxOrderHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("maxOrder"))

        @JvmField
        public val spatializeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("spatialize"))

        @JvmField
        public val speakerLayoutHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("speakerLayout"))

        @JvmField
        public val hrtfHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("hrtf"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLPathEffectSettings =
            IPLPathEffectSettings(alloc.allocate(IPLPathEffectSettings.layout))
    }
}
