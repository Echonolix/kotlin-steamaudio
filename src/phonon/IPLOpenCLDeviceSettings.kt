// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLOpenCLDeviceSettings(
    public val `$mem`: MemorySegment,
) {
    public var type: IPLOpenCLDeviceType
        get() = IPLOpenCLDeviceType.fromInt(
            IPLOpenCLDeviceSettings.typeHandle.get(this.`$mem`, 0L) as
                    Int
        )
        set(`value`) {
            IPLOpenCLDeviceSettings.typeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var numCUsToReserve: IPLint32
        get() = IPLOpenCLDeviceSettings.numCUsToReserveHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLOpenCLDeviceSettings.numCUsToReserveHandle.set(this.`$mem`, 0L, value)
        }

    public var fractionCUsForIRUpdate: IPLfloat32
        get() = IPLOpenCLDeviceSettings.fractionCUsForIRUpdateHandle.get(this.`$mem`, 0L) as Float
        set(`value`) {
            IPLOpenCLDeviceSettings.fractionCUsForIRUpdateHandle.set(this.`$mem`, 0L, value)
        }

    public var requiresTAN: IPLbool
        get() = IPLbool.fromInt(IPLOpenCLDeviceSettings.requiresTANHandle.get(this.`$mem`, 0L) as Int)
        set(`value`) {
            IPLOpenCLDeviceSettings.requiresTANHandle.set(this.`$mem`, 0L, value.value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLOpenCLDeviceSettings.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("type"),
            ValueLayout.JAVA_INT.withName("numCUsToReserve"),
            ValueLayout.JAVA_FLOAT.withName("fractionCUsForIRUpdate"),
            ValueLayout.JAVA_INT.withName("requiresTAN"),
        ).withName("IPLOpenCLDeviceSettings")

        @JvmField
        public val typeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("type"))

        @JvmField
        public val numCUsToReserveHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("numCUsToReserve"))

        @JvmField
        public val fractionCUsForIRUpdateHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("fractionCUsForIRUpdate"))

        @JvmField
        public val requiresTANHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("requiresTAN"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLOpenCLDeviceSettings =
            IPLOpenCLDeviceSettings(alloc.allocate(IPLOpenCLDeviceSettings.layout))
    }
}
