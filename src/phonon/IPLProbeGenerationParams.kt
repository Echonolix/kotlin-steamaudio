// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.MethodHandle
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLProbeGenerationParams(
    public val `$mem`: MemorySegment,
) {
    public var type: IPLProbeGenerationType
        get() = IPLProbeGenerationType.fromInt(
            IPLProbeGenerationParams.typeHandle.get(this.`$mem`, 0L)
                    as Int
        )
        set(`value`) {
            IPLProbeGenerationParams.typeHandle.set(this.`$mem`, 0L, value.value)
        }

    public var spacing: IPLfloat32
        get() = IPLProbeGenerationParams.spacingHandle.get(this.`$mem`, 0L) as Float
        set(`value`) {
            IPLProbeGenerationParams.spacingHandle.set(this.`$mem`, 0L, value)
        }

    public var height: IPLfloat32
        get() = IPLProbeGenerationParams.heightHandle.get(this.`$mem`, 0L) as Float
        set(`value`) {
            IPLProbeGenerationParams.heightHandle.set(this.`$mem`, 0L, value)
        }

    public var transform: IPLMatrix4x4
        get() = IPLMatrix4x4(
            IPLProbeGenerationParams.transformHandle.invokeExact(this.`$mem`, 0L) as
                    MemorySegment
        )
        set(`value`) {
            MemorySegment.copy(
                value.`$mem`, 0L, this.transform.`$mem`, 0L,
                IPLMatrix4x4.layout.byteSize()
            )
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLProbeGenerationParams.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("type"),
            ValueLayout.JAVA_FLOAT.withName("spacing"),
            ValueLayout.JAVA_FLOAT.withName("height"),
            IPLMatrix4x4.layout.withName("transform"),
        ).withName("IPLProbeGenerationParams")

        @JvmField
        public val typeHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("type"))

        @JvmField
        public val spacingHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("spacing"))

        @JvmField
        public val heightHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("height"))

        @JvmField
        public val transformHandle: MethodHandle =
            layout.sliceHandle(MemoryLayout.PathElement.groupElement("transform"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLProbeGenerationParams =
            IPLProbeGenerationParams(alloc.allocate(IPLProbeGenerationParams.layout))
    }
}
