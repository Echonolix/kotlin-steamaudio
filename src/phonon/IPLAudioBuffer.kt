// this file is auto generated by endoqa kotlin ffi, modify it with caution
package phonon

import java.lang.foreign.*
import java.lang.invoke.VarHandle

@JvmInline
public value class IPLAudioBuffer(
    public val `$mem`: MemorySegment,
) {
    public var numChannels: IPLint32
        get() = IPLAudioBuffer.numChannelsHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLAudioBuffer.numChannelsHandle.set(this.`$mem`, 0L, value)
        }

    public var numSamples: IPLint32
        get() = IPLAudioBuffer.numSamplesHandle.get(this.`$mem`, 0L) as Int
        set(`value`) {
            IPLAudioBuffer.numSamplesHandle.set(this.`$mem`, 0L, value)
        }

    public var `data`: Pointer<Pointer<IPLfloat32>>
        get() = IPLAudioBuffer.dataHandle.get(this.`$mem`, 0L) as MemorySegment
        set(`value`) {
            IPLAudioBuffer.dataHandle.set(this.`$mem`, 0L, value)
        }

    public constructor(gc: Boolean) : this(kotlin.run {
        require(gc) { "Do not call this if gc is not want" }
        Arena.ofAuto().allocate(IPLAudioBuffer.layout)
    })

    public companion object {
        public val layout: StructLayout = MemoryLayout.structLayout(
            ValueLayout.JAVA_INT.withName("numChannels"),
            ValueLayout.JAVA_INT.withName("numSamples"),
            `$RuntimeHelper`.POINTER.withName("data"),
        ).withName("IPLAudioBuffer")

        @JvmField
        public val numChannelsHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("numChannels"))

        @JvmField
        public val numSamplesHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("numSamples"))

        @JvmField
        public val dataHandle: VarHandle =
            layout.varHandle(MemoryLayout.PathElement.groupElement("data"))

        @JvmStatic
        public fun allocate(alloc: SegmentAllocator): IPLAudioBuffer =
            IPLAudioBuffer(alloc.allocate(IPLAudioBuffer.layout))
    }
}
